---
  - name: update apt cache
    apt: update_cache=yes cache_valid_time=604800

  - name: check if imposm3 has already been built
    stat: path={{imposm3_bin}}
    register: imposm3

  - include: build_imposm.yml
    when: not imposm3.stat.exists

  - name: install postgis packages
    apt: pkg={{item}}
    with_items: postgis_packages

  - name: write postgres.conf file
    template: src=templates/postgresql.conf.j2 dest=/etc/postgresql/9.3/main/postgresql.conf
    notify: restart postgresql

  - name: write pg_hba.conf file
    template: src=templates/pg_hba.conf.j2 dest=/etc/postgresql/9.3/main/pg_hba.conf
    notify: restart postgresql

  - name: create .pgpass file
    template: src=templates/pgpass.j2 dest=~/.pgpass mode=0600
    sudo: no

  - name: make sure postgres has started
    service: name=postgresql state=started

  - name: create db user
    sudo_user: postgres
    postgresql_user: name={{db_user}}
                     password={{db_password}}
                     encrypted=false

  - name: create osm database
    sudo_user: postgres
    postgresql_db: name={{db_name}} owner={{db_user}}

  - name: enable postgis on osm database
    sudo_user: postgres
    command: psql -d {{db_name}} -c 'CREATE EXTENSION IF NOT EXISTS postgis;'

  - name: enable hstore on osm database
    sudo_user: postgres
    command: psql -d {{db_name}} -c 'CREATE EXTENSION IF NOT EXISTS hstore;'

  - name: make osm dir
    file: path={{osm_dir}} recurse=yes state=directory owner={{ansible_ssh_user}}

  - name: make metro extract dir
    file: path={{metro_tmp_dir}} recurse=yes state=directory
    when: metro_extracts
    sudo: no

  - name: download metro extracts
    get_url: url=https://s3.amazonaws.com/metro-extracts.mapzen.com/{{item}}.osm.pbf dest={{metro_tmp_dir}}/{{item}}.osm.pbf
    with_items: metro_extracts
    when: metro_extracts
    sudo: no

  - name: make geofabrik extract dirs
    file: path={{geofabrik_tmp_dir}}/{{item | dirname}} recurse=yes state=directory
    with_items: geofabrik_extracts
    when: geofabrik_extracts
    sudo: no

  - name: download geofabrik extracts
    get_url: url=http://download.geofabrik.de/{{item}}-latest.osm.pbf dest={{geofabrik_tmp_dir}}/{{item}}.osm.pbf
    with_items: geofabrik_extracts
    sudo: no

  - name: write mapping.json file
    template: src=templates/mapping.json dest={{mapping_json}}

  - name: add extracts to imposm3 cache
    command: "{{imposm3_bin}} import -connection postgis://osm:osm@localhost/osm -mapping {{mapping_json}} -read {{metro_tmp_dir}}/{{item}}.osm.pbf -appendcache -cachedir={{imposm3_cache_dir}}"
    with_items: metro_extracts
    when: metro_extracts

  - name: add extracts to imposm3 cache
    command: "{{imposm3_bin}} import -connection postgis://osm:osm@localhost/osm -mapping {{mapping_json}} -read {{geofabrik_tmp_dir}}/{{item}}.osm.pbf -appendcache -cachedir={{imposm3_cache_dir}}"
    with_items: geofabrik_extracts
    when: geofabrik_extracts

  - name: write OSM data to PostGIS
    command: "{{imposm3_bin}} import -connection postgis://osm:osm@localhost/osm -mapping {{mapping_json}} -write -cachedir={{imposm3_cache_dir}} -dbschema-import={{db_schema}}"
